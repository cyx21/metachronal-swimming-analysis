clear all
clc

path='C:\Users\admin\Desktop\课程资源\异步游动\MLdata.xlsx';
data = readtable(path, 'Sheet', 'Re100+Re300');
Re100=data(:,1:10);Re300=data(:,12:17);
%
% Re100
% ddd=Re100;
% 
% [n,~]=size(ddd);
% phi=table2array(ddd(:,2));
% phi_cor=table2array(ddd(:,1));
% space=table2array(ddd(:,4));
% Ct=table2array(ddd(:,10));
%  Ct_r=table2array(data(:,8));
%% Re300
ddd=Re300;
[n,~]=size(ddd);
phi=table2array(ddd(:,1));
phi_cor=table2array(ddd(:,2));
space=table2array(ddd(:,4));
Ct=table2array(ddd(:,6));
Ct_r=table2array(data(:,6));
%%
%scatter3()
num=0;
for i=1:1:n
    if space(i,1)>0
        
    if isnan(Ct(i,1))
    else
        num=num+1;
        point(num,1)=phi(i,1);
        point(num,2)=phi_cor(i,1);
        point(num,3)=space(i,1);
        point(num,4)=Ct(i,1);
        point(num,5)=phi(i,1)/phi_cor(i,1);
        point(num,6)=Ct_r(i,1);
    end
    end
end
%gridSize=[40,40];

     % 函数输入:
    % inputData: n*4 矩阵，每行包含 [x, _, y, value]
    % gridSize: 生成的均匀网格的大小 (例如 [100, 100])
   [X,Y,Z]=FEM(point);
 %[X,Y,Z]=LocalLoss(point) ;
 %[X,Y,Z]=XIANXING(point) ;
 X_org=X;
 b=[0.0510551055105511;0.0520552055205521;0.0531053105310531;0.0541554155415542;0.0552055205520552;0.0562556255625563;0.0572557255725573;0.0583058305830583;0.0593559355935594;0.0604560456045605;0.0614561456145615;0.0625062506250625;0.0635563556355636;0.0646064606460646;0.0656065606560656;0.0666566656665667;0.0677067706770677;0.0687568756875688;0.0698069806980698;0.0708570857085709;0.0719071907190719;0.0730073007300730;0.0740574057405741;0.0751075107510751;0.0761576157615762;0.0772577257725773;0.0783078307830783;0.0794079407940794;0.0804580458045805;0.0815581558155816;0.0826082608260826;0.0836583658365837;0.0847084708470847;0.0858085808580858;0.0868586858685869;0.0879087908790879;0.0890089008900890;0.0900590059005901;0.0911591159115912;0.0922592259225923;0.0933593359335934;0.0944094409440944;0.0955095509550955;0.0966096609660966;0.0977097709770977;0.0988598859885989;0.0999599959996000;0.101060106010601;0.102160216021602;0.103210321032103;0.104310431043104;0.105410541054105;0.106510651065107;0.107610761076108;0.108710871087109;0.109860986098610;0.110961096109611;0.112061206120612;0.113211321132113;0.114311431143114;0.115461546154615;0.116611661166117;0.117761776177618;0.118911891189119;0.120062006200620;0.121212121212121;0.122312231223122;0.123462346234623;0.124562456245625;0.125712571257126;0.126862686268627;0.128012801280128;0.129162916291629;0.130313031303130;0.131463146314631;0.132663266326633;0.133813381338134;0.135013501350135;0.136163616361636;0.137363736373637;0.138563856385639;0.139763976397640;0.140964096409641;0.142164216421642;0.143314331433143;0.144514451445145;0.145714571457146;0.146864686468647;0.148064806480648;0.149264926492649;0.150465046504650;0.151715171517152;0.152915291529153;0.154165416541654;0.155415541554155;0.156615661566157;0.157865786578658;0.159165916591659;0.160416041604160;0.161716171617162;0.162916291629163;0.164166416641664;0.165366536653665;0.166616661666167;0.167866786678668;0.169166916691669;0.170417041704170;0.171717171717172;0.172967296729673;0.174267426742674;0.175567556755676;0.176917691769177;0.178217821782178;0.179567956795680;0.180918091809181;0.182268226822682;0.183568356835684;0.184868486848685;0.186168616861686;0.187468746874687;0.188818881888189;0.190169016901690;0.191519151915192;0.192869286928693;0.194269426942694;0.195669566956696;0.197069706970697;0.198469846984698;0.199869986998700;0.201320132013201;0.202720272027203;0.204120412041204;0.205520552055206;0.206920692069207;0.208320832083208;0.209770977097710;0.211171117111711;0.212621262126213;0.214121412141214;0.215621562156216;0.217121712171217;0.218621862186219;0.220172017201720;0.221722172217222;0.223222322232223;0.224672467246725;0.226172617261726;0.227672767276728;0.229222922292229;0.230723072307231;0.232323232323232;0.233873387338734;0.235473547354735;0.237123712371237;0.238723872387239;0.240424042404240;0.242074207420742;0.243674367436744;0.245274527452745;0.246924692469247;0.248524852485249;0.250225022502250;0.251875187518752;0.253575357535754;0.255325532553255;0.257075707570757;0.258875887588759;0.260676067606761;0.262526252625263;0.264276427642764;0.266026602660266;0.267776777677768;0.269576957695770;0.271427142714271;0.273277327732773;0.275177517751775;0.277077707770777;0.279027902790279;0.281028102810281;0.283078307830783;0.284978497849785;0.286878687868787;0.288828882888289;0.290829082908291;0.292879287928793;0.294979497949795;0.297079707970797;0.299279927992799;0.301530153015302;0.303730373037304;0.305830583058306;0.307980798079808;0.310181018101810;0.312431243124312;0.314731473147315;0.317131713171317;0.319581958195820;0.322132213221322;0.324532453245325;0.326932693269327;0.329382938293829;0.331883188318832;0.334483448344835;0.337183718371837;0.339983998399840;0.342884288428843;0.345584558455846;0.348334833483348;0.351135113511351;0.354085408540854;0.357185718571857;0.360436043604360;0.363786378637864;0.366886688668867;0.370087008700870;0.373487348734874;0.377087708770877;0.380938093809381;0.384838483848385;0.388538853885389;0.392439243924392;0.396689668966897;0.401390139013901;0.406090609060906;0.410641064106411;0.415791579157916;0.421642164216422;0.427542754275428;0.433743374337434;0.441344134413441;0.449444944494449;0.459345934593459;0.472397239723972;0.500000000000000;0.500000000000000;0.500000000000000;0.500000000000000;0.500000000000000;0.500000000000000;0.500000000000000;0.500000000000000;0.500000000000000;0.500000000000000;0.500000000000000;0.500000000000000;0.500000000000000;0.500000000000000;0.500000000000000;0.500000000000000;0.500000000000000;0.500000000000000;0.500000000000000;0.500000000000000;0.500000000000000;0.500000000000000;0.500000000000000;0.500000000000000;0.500000000000000;0.500000000000000;0.500000000000000;0.500000000000000;0.500000000000000;0.500000000000000;0.500000000000000;0.500000000000000;0.500000000000000;0.500000000000000;0.500000000000000;0.500000000000000;0.500000000000000;0.500000000000000;0.500000000000000;0.500000000000000;0.500000000000000;0.500000000000000;0.500000000000000;0.500000000000000;0.500000000000000;0.500000000000000;0.500000000000000;0.500000000000000;0.500000000000000;0.500000000000000;0.500000000000000;0.500000000000000;0.500000000000000;0.500000000000000;0.500000000000000;0.500000000000000;0.500000000000000;0.500000000000000;0.500000000000000;0.500000000000000;0.500000000000000;0.500000000000000;0.500000000000000;0.500000000000000;0.500000000000000;0.500000000000000;0.500000000000000;0.500000000000000;0.500000000000000;0.500000000000000;0.500000000000000;0.500000000000000;0.500000000000000;0.500000000000000;0.500000000000000;0.500000000000000;0.500000000000000;0.500000000000000;0.500000000000000;0.500000000000000;0.500000000000000;0.500000000000000;0.500000000000000;0.500000000000000;0.500000000000000;0.500000000000000;0.500000000000000;0.500000000000000;0.500000000000000;0.500000000000000;0.500000000000000;0.500000000000000;0.500000000000000;0.500000000000000;0.500000000000000;0.500000000000000;0.500000000000000;0.500000000000000;0.500000000000000;0.500000000000000;0.500000000000000;0.500000000000000;0.500000000000000;0.500000000000000;0.500000000000000;0.500000000000000;0.500000000000000;0.500000000000000;0.500000000000000;0.500000000000000;0.500000000000000;0.500000000000000;0.500000000000000;0.500000000000000;0.500000000000000;0.500000000000000;0.500000000000000;0.500000000000000];
for i=1:1:351
 X_org(i,:)=X(i,:)*b(i);
end
surf(X_org, Y, Z);
shading interp; % 平滑着色
colorbar; % 添加颜色条
xlabel('phase lag');
ylabel('s*');
zlabel('C_T');
title('随机散点数据的曲面插值');
grid on;
%hold on;
%scatter3(X_org, Y, Z, 50, 'r', 'filled'); % 绘制散点

output(X_org,Y,Z)
function output(X,Y,Z)
nvar=3;
 path='E:\ML3D\Re300contour_org.dat';
fid=fopen(path,'wt');
fprintf(fid,'%s\n','VARIABLES="phase lag","spacing(c)","CT"');
fprintf(fid,'%s\n','zone t="CT" i=351,j=201,f=point');

[m,n]=size(X);k=1;
out=zeros(m*n,nvar);
for j=1:1:n
    for i=1:1:m
        out(k,1)=X(i,j);
        out(k,2)=Y(i,j);
        out(k,3)=Z(i,j);
        k=k+1;
    end
end
 
for k=1:1:m*n
    for j=1:1:nvar
        if j==nvar
            fprintf(fid,'%f\n',out(k,j));
        else
            fprintf(fid,'%f\t',out(k,j));
        end
    end
end
fclose(fid);
  end
    % 提取散点的横坐标、纵坐标和物理量
  % ;
%Yangtiao(point)
 % 
function [X,Y,Z]=XIANXING(inputData)
x = inputData(:, 2);
y = inputData(:, 3);
z = inputData(:, 4);

% 创建均匀分布的网格
gridSize = [201, 351];
xGrid = linspace(0, 1, gridSize(1));
yGrid = linspace(0.25, 2, gridSize(2));
[X, Y] = meshgrid(xGrid, yGrid);

% 使用线性插值进行拟合
Z = griddata(x, y, z, X, Y, 'linear');

% 绘制曲面拟合结果
figure(1);
surf(X, Y, Z, 'EdgeColor', 'none');  % 绘制一个无边缘的表面图
colorbar;  % 添加颜色条
xlabel('X Coordinate');
ylabel('Y Coordinate');
zlabel('Interpolated Value');
title('Linear Interpolation Surface Fit');
view(3);  % 设置为三维视图
grid on;
% hold on;
% scatter3(x, y, z, 50, 'r', 'filled'); % 绘制散点
end
% 提取散点的横坐标、纵坐标和物理量
function [X,Y,Z]=Yangtiao(inputData)
x = inputData(:, 1);
y = inputData(:, 3);
z = inputData(:, 4);

% 创建均匀分布的网格
gridSize = [201, 351];
xGrid = linspace(min(x), max(x), gridSize(1));
yGrid = linspace(min(y), max(y), gridSize(2));
[X, Y] = meshgrid(xGrid, yGrid);

% 使用三次样条插值进行拟合
Z = griddata(x, y, z, X, Y, 'spline');  % 使用三次样条插值

% 绘制曲面拟合结果
figure;
surf(X, Y, Z, 'EdgeColor', 'none');  % 绘制一个无边缘的表面图
colorbar;  % 添加颜色条
xlabel('X Coordinate');
ylabel('Y Coordinate');
zlabel('Interpolated Value');
title('Cubic Spline Interpolation Surface Fit');
view(3);  % 设置为三维视图
grid on;
end
function [X, Y, Z]=LocalLoss(point) 
    x = point(:, 1);
    y = point(:, 3);
    values = point(:, 4);
localFit = fit([x, y], values, 'loess', 'Span', 0.8);  % Span 控制平滑程度

% 创建均匀分布的网格
gridSize = [201, 351];
    xGrid = linspace(0, 1, gridSize(1));
    yGrid = linspace(0.25, 2, gridSize(2));
[X, Y] = meshgrid(xGrid, yGrid);

% 计算拟合值
Z = localFit(X(:), Y(:));

% 将结果转换为均匀网格的形式
Z = reshape(Z, size(X));

% 绘制曲面拟合结果
figure;
surf(X, Y, Z, 'EdgeColor', 'none');  % 绘制一个无边缘的表面图
colorbar;  % 添加颜色条
xlabel('X Coordinate');
ylabel('Y Coordinate');
zlabel('Fitted Value');
title('Locally Weighted Regression Surface Fit');
view(3);  % 设置为三维视图
grid on;
end
function [xq,yq,zq]=FEM(point)
    x = point(:, 2);
    y = point(:, 3);
    z = point(:, 6);
   % b= point(:, 4);
tri = delaunay(x, y); % 使用 Delaunay 三角剖分

% 创建插值函数
F = scatteredInterpolant(x, y, z, 'natural', 'linear');
% 创建网格用于绘制曲面
[xq, yq] = meshgrid(0:0.005:1, 0.25:0.005:2); % 生成查询网格
zq = F(xq, yq); % 计算插值的z坐标

% 绘制曲面
figure;
surf(xq, yq, zq);
shading interp; % 平滑着色
colorbar; % 添加颜色条
xlabel('X坐标');
ylabel('Y坐标');
zlabel('Z坐标');
title('随机散点数据的曲面插值');
grid on;

%显示散点数据
% hold on;
% % scatter3(x, y, z, 50, 'r', 'filled'); % 绘制散点
% hold off;
end
